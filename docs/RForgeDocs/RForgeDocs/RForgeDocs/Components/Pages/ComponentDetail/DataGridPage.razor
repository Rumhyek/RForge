@page "/data-grid/details"

<ComponentDetail Title="Data Grid"
                 PlaygroundUrl="/data-grid/playground"
                 SubTitle="Paginated table support">

    <CustomSideLinks>

        <div class="menu">
            <p class="menu-label is-size-6 mb-2">Repository Links</p>
            <ul class="menu-list">
                @ComponentDetail.SideLink(("RfDataGrid.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDataGrid.razor"))
                @ComponentDetail.SideLink(("RfDataGrid.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDataGrid.razor.cs"))
                @ComponentDetail.SpacerLink()
                @ComponentDetail.SideLink(("DataGridContext.cs", TagInfo.Library, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/Models/DataGridContext.cs"))
                @ComponentDetail.SideLink(("RfSortOrder.cs", TagInfo.Enum, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForge.Abstractions/RfSortOrder.cs"))

            </ul>
        </div>

        <div class="menu mt-5">
            <p class="menu-label">Header Components</p>
            <ul class="menu-list">
                @ComponentDetail.SideLink(("RfDgHeader.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgHeader.razor"))
                @ComponentDetail.SideLink(("RfDgHeader.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgHeader.razor.cs"))
            </ul>
        </div>

        <div class="menu mt-5">
            <p class="menu-label">Filter Components</p>
            <ul class="menu-list">
                @ComponentDetail.SideLink(("RfDgFilterInput.cs", TagInfo.Library, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/Models/RfDgFilterInput.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterNone.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterNone.razor"))
                @ComponentDetail.SideLink(("RfDgFilterNone.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterNone.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputDate.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputDate.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputDate.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputDate.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputDateTime.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputDateTime.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputDateTime.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputDateTime.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputDateTimeOffset.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputDateTimeOffset.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputDateTimeOffset.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputDateTimeOffset.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputDouble.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputDouble.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputDouble.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputDouble.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputFloat.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputFloat.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputFloat.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputFloat.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputInt.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputInt.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputInt.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputInt.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputLong.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputLong.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputLong.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputLong.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputText.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputText.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputText.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputText.razor.cs"))
                @ComponentDetail.SpacerLink()

                @ComponentDetail.SideLink(("RfDgFilterInputTime.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputTime.razor"))
                @ComponentDetail.SideLink(("RfDgFilterInputTime.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfDgFilterInputTime.razor.cs"))
                @ComponentDetail.SpacerLink()
            </ul>
        </div>

        <div class="menu mt-6">
            <p class="menu-label is-size-6 mb-2">Examples</p>
            <ul class="menu-list">
                @ComponentDetail.SideLink(("Very Simple Example", TagInfo.Empty, "/data-grid/example/very-simple"))
                @ComponentDetail.SideLink(("Basic Example", TagInfo.Empty, "/data-grid/example/basic-example"))
                @ComponentDetail.SideLink(("Minimal Example", TagInfo.Empty, "/data-grid/example/minimum-example"))
                @ComponentDetail.SideLink(("Double Click", TagInfo.Empty, "/data-grid/example/double-click"))
                @ComponentDetail.SideLink(("View Selected Only", TagInfo.Empty, "/data-grid/example/view-selected-example"))

            </ul>
        </div>
    </CustomSideLinks>

    <Purpose>
        <div class="content">

            <p>
                <code>RfDataGrid</code> adds support for paginated tables that may include filters.
                This component does not manage filters nor does it process the data but instead requires
                the developer to hook into a series of events to update the table when needed.
            </p>

            <h4>When to Use</h4>
            <p>
                When there is a large amount of tabular data that needs filtering, sorting, and pagination support.
            </p>

        </div>
    </Purpose>

    <Setup>
        <BasicSetupDetails />
    </Setup>


    <BasicUsage>

        <div class="content">

            <p>
                Unlike most Data grids, To use <code>RfDataGrid</code> the columns are broken into three seperate render fragments: <code>Headers</code>, <code>Cells</code>, and <code>Filters</code>.
                Each render fragement fills in the approriate section of the table. There are several pre built components foreach of these render fragments that can be used.
            </p>
            <p>
                Each of these sub components communicate with the <code>RfDataGrid</code> via <code>DataGridContext</code> which the <code>RfDataGrid</code>
                creates and passes down via a <code>CascadingParameter</code>.
            </p>

            <h2>Headers</h2>
            <p>
                The render fragment <code>Headers</code> is where each columns <code>th</code> elements should go.
                As an option, if sorting isn't required, you could remove the creation of additional sub components by just writing the standard
                elements within <code>Headers</code>.
            </p>
            <pre><code><xmp>//Example Headers
<th>Column 1</th>
<th>Column 2</th>
<th>Column 3</th>
<th>Column 4</th>
<th>Column n</th>
</xmp></code></pre>

            <p>
                Below list out sub components of <code>RfDataGrid</code>
            </p>
            <table>
                <thead>
                    <tr>
                        <th>Component</th>
                        <th>Purpose</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>RfDgHeader</code></td>
                        <td>Wraps a <code>th</code> providing support for sorting columns.</td>
                    </tr>
                </tbody>
            </table>

            <h2>Filters</h2>
            <p>
                <code>Filters</code> render fragment is an optional location to add filters for the DataGrid. They are included in the <code>thead</code>
                underneath the <code>Headers</code> row. There are several prebuilt filters that can be used or
                if a custom one is required look to <code>RfDgFilterInput</code> base class for an example of a filter.
            </p>
            <p>
                However, this class is not required. To make the filter work correctly you will need to have a <code>DataGridContext</code>
                parameter and properly call <code>DataGridContext.OnFilterChanged</code>, or call the pages listener for <code>RfDataGrid.OnLoad</code>.
            </p>
            <p>
                Below list out all predefined filters. More are planned to be written.
            </p>
            <table>
                <thead>
                    <tr>
                        <th>Component</th>
                        <th>Purpose</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>RfDgFilterNone</code></td>
                        <td>Use this if a column doesn't need a filter.</td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputDate</code></td>
                        <td>A date input filter.</td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputDateTime</code></td>
                        <td>A date and time input filter.</td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputDateTimeOffset</code></td>
                        <td>A date and time input filter using <code>DateTimeOffset</code></td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputDouble</code></td>
                        <td>A double input filter.</td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputFloat</code></td>
                        <td>A float input filter.</td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputInt</code></td>
                        <td>A int input filter.</td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputLong</code></td>
                        <td>A long input filter.</td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputText</code></td>
                        <td>A string input filter.</td>
                    </tr>
                    <tr>
                        <td><code>RfDgFilterInputTime</code></td>
                        <td>A time input filter.</td>
                    </tr>
                </tbody>
            </table>

            <div class="notification is-info">
                <strong>NOTE:</strong> To improve performance, the <code class="has-text-info">RfDataGrid</code> is not aware of any filters nor does it manage them.
                Treat this simarly to how <code class="has-text-info">EditForm</code> component works. This has the additional benifit to easily support filters
                outside of the <code class="has-text-info">RfDataGrid</code>.
            </div>

            <h2>Cells</h2>
            <p>
                The <code>Cells</code> render fragment is where you format the content of a row of the table. The <code>Cells</code> has the current
                row of data being passed into it giving it access to <code>context</code> where <code>context</code> equals to the <code>TRowData</code>.
            </p>
            <p>
                Unlike <code>Headers</code> needing to use <code>RfDgHeader</code>, the <code>Cells</code> has no interactions with the <code>RfDataGrid</code>.
                This allows a row to render with no components improving performance.
            </p>

            <p>
                There are currently no sub components for <code>Cells</code>
            </p>

            <h1>Required Parameters</h1>
            <p>
                <code>RfDataGrid</code> needs the following parameters set in order to render properly.
            </p>
            <ul>
                <li><code>Data</code> - Without it the skeleton is shown.</li>
                <li><code>TotalCount</code> - Needs to show for pagination.</li>
                <li><code>CurrentPageIndex</code> - Needs to show for pagination.</li>
                <li><code>SortOrder</code> - Required if sorting is allowed.</li>
                <li><code>SortKey</code> - Required if sorting is allowed.</li>
                <li><code>OnLoadData</code> - Required to setup <code>Data</code></li>
            </ul>

            <h1>Example</h1>
            <p>
                Below shows an example of setting up the <code>RfDataGrid</code>.
                The example doesn't show the properties declarations or the <code>OnLoadData</code> function.
            </p>

            <pre><code>&lt;RfDataGrid OnLoadData="@@OnLoadData"
            Data=UserCollection
            TotalCount=TotalCount
            @@bind-CurrentPageIndex=CurrentPageIndex
            @@bind-SortOrder=CurrentSortOrder
            @@bind-SortKey=@@CurrentSortKey&gt;

    &lt;Headers&gt;
        &lt;RfDgHeader SortKey="Id" &gt;Id&lt;/RfDgHeader&gt;
        &lt;RfDgHeader SortKey="FirstName" &gt;First Name&lt;/RfDgHeader&gt;
        &lt;RfDgHeader SortKey="LastName" &gt;Last Name&lt;/RfDgHeader&gt;
        &lt;RfDgHeader SortKey="Email" &gt;Email&lt;/RfDgHeader&gt;
    &lt;/Headers&gt;

    &lt;Filters&gt;
        &lt;RfDgFilterNone /&gt;
        &lt;RfDgFilterInputText @@bind-Value=Filter.FirstName /&gt;
        &lt;RfDgFilterInputText @@bind-Value=Filter.LastName /&gt;
        &lt;RfDgFilterInputText @@bind-Value=Filter.Email /&gt;
    &lt;/Filters&gt;

    &lt;Cells&gt;
        &lt;td&gt;@@context.Id&lt;/td&gt;
        &lt;td&gt;@@context.FirstName&lt;/td&gt;
        &lt;td&gt;@@context.LastName&lt;/td&gt;
        &lt;td&gt;@@context.Email&lt;/td&gt;
    &lt;/Cells&gt;    
&lt;/RfDataGrid&gt;</code></pre>

            <h2>Empty Content</h2>

            <p>
                If the <code>Data</code> is empty, the <code>RfDataGrid</code> will render a <code>EmptyContent</code> wrapped in a <code>tr</code>.
                This is useful to show a message to the user that there is no data to display.
            </p>

            <h3>Example</h3>
            <pre><code>&lt;RfDataGrid OnLoadData="OnLoadData"
            Data="UserCollection"
            TotalCount="TotalCount"
            bind-CurrentPageIndex="CurrentPageIndex"
            bind-SortOrder="CurrentSortOrder"
            bind-SortKey="CurrentSortKey"&gt;

    &lt;Headers&gt;
        &lt;RfDgHeader SortKey="Id"&gt;Id&lt;/RfDgHeader&gt;
        &lt;RfDgHeader SortKey="FirstName"&gt;First Name&lt;/RfDgHeader&gt;
        &lt;RfDgHeader SortKey="LastName"&gt;Last Name&lt;/RfDgHeader&gt;
        &lt;RfDgHeader SortKey="Email"&gt;Email&lt;/RfDgHeader&gt;
    &lt;/Headers&gt;

    &lt;Cells&gt;
        &lt;td&gt;@@context.Id&lt;/td&gt;
        &lt;td&gt;@@context.FirstName&lt;/td&gt;
        &lt;td&gt;@@context.LastName&lt;/td&gt;
        &lt;td&gt;@@context.Email&lt;/td&gt;
    &lt;/Cells&gt;

    &lt;EmptyContent&gt;
        &lt;tr&gt;
            &lt;td colspan="4"&gt;No data available.&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/EmptyContent&gt;

&lt;/RfDataGrid&gt;</code></pre>
        </div>

    </BasicUsage>


</ComponentDetail>

@code {

}
